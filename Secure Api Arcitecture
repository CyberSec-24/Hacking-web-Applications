APIs are commonly used by business organizations for connecting different services and transferring data. 

Attackers attempt to exploit API vulnerabilities such as broken authentication and security misconfiguration for malicious purposes. 

Exposed APIs can become a major cause for the breach of sensitive data such as personally identifiable information (PII) to the public.

Hence, developers must use multiple security layers to avoid API exposure and data breaches.

Layer one 
The API validates the user to check whether the entity is authorized by the company. 

In this situation, the developers can use API security, by which an exception will be returned if the user is not authorized or permitted. 

For example, the API may throw a “Company Not Found” exception. This helps the API developer identify any invalid company

Layer two
In this layer, middleware can be used by the API to provide a query plan by calling the data layer. 

The database layer declares a filter for the company ID before sending a request. 

Developers can include a security mechanism to return an exception such as “Unsafe Data Query” in the absence of such a filter.

Layer three 
In this layer, an SQL join must be used to query an SQL database using the data link layer based on API calls. 

This helps in ensuring that all the queries match the user responsible for the API call. Moreover, this verifies the user context, in contrast to its data stored by the SQL layer

 Layer four
This layer creates a mapper layer that enables the conversion of all the database records into different user-visible models. 

This technique can be used to prevent sensitive data such as implementation details from the public or customers

Layer five
The response filter of the API verifies the models that are generated by the mapper layer above. 

After the response filter declares that the records match the user calling that API, it allows the user to observe a specific account. 

This layer discards the data models without clearly flagging the account of a customer by double-checking the work of other layers.




